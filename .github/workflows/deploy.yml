name: Deploy to Cloud Run

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: # Permite deploy manual

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: zep-ai-memory-api
  REGION: us-central1

jobs:
  # =================================================================
  # JOB 1: TESTES E QUALIDADE
  # =================================================================
  test:
    name: 🧪 Testes e Qualidade
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🔍 Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: 🔒 Security scan with bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -ll

    - name: 🧪 Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing
      env:
        TESTING: true
        API_SECRET_KEY: test-secret-key-for-ci-cd-testing-only
        ZEP_API_KEY: test-zep-key
        ZEP_API_URL: http://localhost:8000
        CACHE_ENABLED: false
        AUTH_ENABLED: false

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  # =================================================================
  # JOB 2: BUILD E DEPLOY
  # =================================================================
  deploy:
    name: 🚀 Build & Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Setup Google Cloud Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: ⚙️ Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: 🔧 Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: 🏗️ Build Docker image
      run: |
        docker build \
          --platform linux/amd64 \
          --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --tag gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from gcr.io/$PROJECT_ID/$SERVICE_NAME:latest \
          .

    - name: 📤 Push to Container Registry
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: 🚀 Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --max-instances 100 \
          --min-instances 0 \
          --concurrency 80 \
          --timeout 300 \
          --set-env-vars="DEBUG=false" \
          --set-env-vars="LOG_LEVEL=INFO" \
          --set-env-vars="LOG_FORMAT=json" \
          --set-env-vars="API_SECRET_KEY=${{ secrets.API_SECRET_KEY }}" \
          --set-env-vars="ZEP_API_KEY=${{ secrets.ZEP_API_KEY }}" \
          --set-env-vars="ZEP_API_URL=${{ secrets.ZEP_API_URL }}" \
          --set-env-vars="CORS_ORIGINS=https://yourdomain.com" \
          --set-env-vars="AUTH_ENABLED=true" \
          --set-env-vars="RATE_LIMIT_ENABLED=true" \
          --set-env-vars="SECURITY_HEADERS_ENABLED=true" \
          --set-env-vars="PROMETHEUS_ENABLED=true" \
          --set-env-vars="CACHE_ENABLED=true" \
          --set-env-vars="REDIS_URL=redis://localhost:6379" \
          --labels="app=zep-ai-memory-api,version=$GITHUB_SHA"

    - name: 🌐 Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
          --region $REGION \
          --format 'value(status.url)')
        echo "Service deployed at: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: 🏥 Health check
      run: |
        # Aguardar deployment ficar pronto
        sleep 30
        
        # Verificar liveness
        curl -f $SERVICE_URL/health/live || exit 1
        
        # Verificar readiness  
        curl -f $SERVICE_URL/health/ready || exit 1
        
        # Verificar health detalhado
        curl -s $SERVICE_URL/health/detailed | jq .
        
        echo "✅ Deployment successful!"
        echo "🌐 API URL: $SERVICE_URL"
        echo "📖 Docs: $SERVICE_URL/docs" 
        echo "🏥 Health: $SERVICE_URL/health/detailed"

    - name: 📊 Post-deployment metrics
      run: |
        echo "📊 Collecting deployment metrics..."
        curl -s $SERVICE_URL/health/metrics-summary | jq .

  # =================================================================
  # JOB 3: SMOKE TESTS PÓS-DEPLOY
  # =================================================================
  smoke-tests:
    name: 🔥 Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Setup Google Cloud Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: ⚙️ Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: 🌐 Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME \
          --region $REGION \
          --format 'value(status.url)')
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: 🔥 Run smoke tests
      run: |
        echo "🔥 Running smoke tests against: $SERVICE_URL"
        
        # Test 1: API Root
        echo "Test 1: API Root"
        curl -f $SERVICE_URL/ | jq .
        
        # Test 2: Health endpoints
        echo "Test 2: Health endpoints"
        curl -f $SERVICE_URL/health/live
        curl -f $SERVICE_URL/health/ready  
        curl -f $SERVICE_URL/health/detailed | jq .status
        
        # Test 3: Metrics endpoints
        echo "Test 3: Metrics"
        curl -f $SERVICE_URL/health/metrics-summary | jq .
        curl -f $SERVICE_URL/metrics | head -20
        
        # Test 4: OpenAPI docs
        echo "Test 4: Documentation"
        curl -f $SERVICE_URL/docs -o /dev/null
        curl -f $SERVICE_URL/openapi.json | jq .info
        
        # Test 5: Security headers
        echo "Test 5: Security headers"
        curl -I $SERVICE_URL/ | grep -E "(X-.*|Strict-Transport|Content-Security)"
        
        echo "✅ All smoke tests passed!"

    - name: 🎉 Deployment summary
      run: |
        echo "🎉 DEPLOYMENT SUCCESSFUL!"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "🌐 API URL: $SERVICE_URL" 
        echo "📖 Documentation: $SERVICE_URL/docs"
        echo "🏥 Health Check: $SERVICE_URL/health/detailed"
        echo "📊 Metrics: $SERVICE_URL/health/metrics-summary"
        echo "🔍 Logs: gcloud logs tail 'resource.type=cloud_run_revision'"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"